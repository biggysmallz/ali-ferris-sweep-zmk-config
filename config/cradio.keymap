// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

// https: //zmk.dev/docs/development/hardware-integration/soft-off-setup?advanced-methods=wakeup&kscan-type=dkscan

&mt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <100>;
    flavor = "balanced";
};

&lt {
    quick-tap-ms = <200>;
    require-prior-idle-ms = <100>;
    flavor = "balanced";
};

&sk { release-after-ms = <4000>; };

&sl { release-after-ms = <4000>; };

/ {
    keys {
        compatible = "gpio-keys";

        soft_off_gpio_key: soft_off_gpio_key { gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    combos {
        compatible = "zmk,combos";

        c0 {
            bindings = <&kp LCTRL>;
            key-positions = <10 19>;
            timeout-ms = <40>;
        };

        c1 {
            bindings = <&kp LEFT_ALT>;
            key-positions = <11 18>;
            timeout-ms = <40>;
        };

        c2 {
            bindings = <&kp LWIN>;
            key-positions = <12 17>;
            timeout-ms = <40>;
        };

        c3 {
            bindings = <&kp LSHFT>;
            key-positions = <13 16>;
            timeout-ms = <40>;
        };

        c4 {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <0 9>;
            timeout-ms = <40>;
        };

        c5 {
            bindings = <&kp ESC>;
            key-positions = <2 3>;
            timeout-ms = <35>;
        };

        c6 {
            bindings = <&sk LSHIFT>;
            key-positions = <2 13>;
            timeout-ms = <35>;
        };

        c7 {
            bindings = <&sl 1>;
            key-positions = <33 30>;
            timeout-ms = <40>;
        };

        c8 {
            bindings = <&sl 2>;
            key-positions = <31 32>;
            timeout-ms = <40>;
        };

        c9 {
            bindings = <&kp CARET>;
            key-positions = <6 7>;
            timeout-ms = <35>;
        };

        c10 {
            bindings = <&kp DOLLAR>;
            key-positions = <7 8>;
            timeout-ms = <35>;
        };

        c11 {
            bindings = <&kp PAGE_UP>;
            key-positions = <3 4>;
            timeout-ms = <35>;
        };

        c12 {
            bindings = <&kp PAGE_DOWN>;
            key-positions = <5 6>;
            timeout-ms = <35>;
        };

        c13 {
            bindings = <&sk RSHIFT>;
            key-positions = <7 16>;
            timeout-ms = <35>;
        };

        c14 {
            bindings = <&sl 1>;
            key-positions = <26 27>;
            timeout-ms = <35>;
        };

        c15 {
            bindings = <&sl 2>;
            key-positions = <27 28>;
            timeout-ms = <35>;
        };

        c16 {
            bindings = <&sl 1>;
            key-positions = <22 23>;
            timeout-ms = <35>;
        };

        c17 {
            bindings = <&sl 2>;
            key-positions = <21 22>;
            timeout-ms = <35>;
        };

        c18 {
            bindings = <&sl 5>;
            key-positions = <22 27>;
            timeout-ms = <40>;
        };

        c19 {
            bindings = <&kp BACKSPACE>;
            key-positions = <13 4>;
            timeout-ms = <35>;
        };

        c20 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <1 2>;
            timeout-ms = <35>;
        };

        c21 {
            bindings = <&kp ENTER>;
            key-positions = <3 14>;
            timeout-ms = <35>;
        };

        C22 {
            bindings = <&kp TAB>;
            key-positions = <1 8>;
            timeout-ms = <40>;
        };

        c23 {
            bindings = <&kp SPACE>;
            key-positions = <3 6>;
            timeout-ms = <40>;
        };

        c24 {
            bindings = <&sl 3>;
            key-positions = <30 31>;
            timeout-ms = <40>;
        };

        c25 {
            bindings = <&sl 4>;
            key-positions = <14 4>;
            timeout-ms = <40>;
        };

        c26 {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <32 33>;
        };
    };

    macros {
        m0: m0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N5 &kp N7 &kp N3 &kp N8 &kp N6 &kp N0 &kp EXCL &kp LS(K) &kp O &kp L &kp DLLR>;
            label = "M0";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            display-name = "BASE";
            bindings = <
&kp Q        &kp W           &kp E           &kp R             &kp T        &kp Y        &kp U              &kp I       &kp O            &kp P
&mt LCTRL A  &mt LEFT_ALT S  &mt LEFT_WIN D  &mt LEFT_SHIFT F  &kp G        &kp H        &mt RIGHT_SHIFT J  &mt RGUI K  &mt RIGHT_ALT L  &mt RCTRL SEMICOLON
&kp Z        &kp X           &kp C           &kp V             &kp B        &kp N        &kp M              &kp COMMA   &kp DOT          &kp SLASH
                                             &lt 1 SPACE       &lt 2 TAB    &lt 2 ENTER  &lt 1 BACKSPACE
            >;
        };

        symbols {
            display-name = "SYM";
            bindings = <
&kp PERCENT    &kp LEFT_BRACKET  &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp SQT             &kp DOUBLE_QUOTES  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp HASH
&kp SEMICOLON  &kp COLON         &kp PERIOD      &kp COMMA             &kp GRAVE           &kp LEFT           &kp DOWN               &kp UP           &kp RIGHT          &kp AMPERSAND
&kp PLUS       &kp MINUS         &kp EQUAL       &kp ASTERISK          &kp SLASH           &kp BACKSLASH      &kp UNDERSCORE         &kp QUESTION     &kp EXCLAMATION    &kp AT_SIGN
                                                 &kp LESS_THAN         &kp GREATER_THAN    &kp PIPE           &kp TILDE
            >;
        };

        numbers {
            display-name = "NUM";
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3      &kp PLUS     &kp ASTERISK  &kp F1      &kp F2   &kp F3   &kp F4
&kp N0  &kp N4  &kp N5  &kp N6      &kp MINUS    &kp SLASH     &kp F5      &kp F6   &kp F7   &kp F8
&kp N0  &kp N7  &kp N8  &kp N9      &kp EQUAL    &kp PERCENT   &kp F9      &kp F10  &kp F11  &kp F12
                        &kp INSERT  &kp HOME     &kp END       &kp DELETE
            >;
        };

        left_hand_sym {
            display-name = "LHS";
            bindings = <
&kp HASH       &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES    &trans  &trans  &trans  &trans  &trans
&kp AMPERSAND  &kp LEFT           &kp DOWN         &kp UP                 &kp RIGHT            &trans  &trans  &trans  &trans  &trans
&kp AT_SIGN    &kp EXCLAMATION    &kp QUESTION     &kp UNDERSCORE         &kp BACKSLASH        &trans  &trans  &trans  &trans  &trans
                                                   &kp TILDE              &kp PIPE             &trans  &trans
            >;
        };

        left_hand_f {
            display-name = "LHF";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4      &trans        &trans  &trans  &trans  &trans  &trans
&kp F5  &kp F6   &kp F7   &kp F8      &kp CARET     &trans  &trans  &trans  &trans  &trans
&kp F9  &kp F10  &kp F11  &kp F12     &kp DOLLAR    &trans  &trans  &trans  &trans  &trans
                          &kp DELETE  &kp END       &trans  &trans
            >;
        };

        adjust_layer {
            display-name = "ADJ";
            bindings = <
&sys_reset    &trans        &trans        &trans        &trans        &m0     &trans  &trans  &trans  &trans
&out OUT_TOG  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR    &trans  &trans  &trans  &trans  &trans
&bootloader   &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans
                                          &trans        &trans        &trans  &trans
            >;
        };
    };
};
